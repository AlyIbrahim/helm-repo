apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
        {{- if .Values.service.ssl }}
        - name: https
          containerPort: 8443
        {{- end }}
        volumeMounts:
        - name: props-vol
          mountPath: /deployments/config/application.properties
          subPath: application.properties
        {{- if .Values.service.ssl }}
        - name: cert-vol
          mountPath: /var/run/secrets/kubernetes.io/ssl
        {{- end }}
#        livenessProbe:
#          httpGet:
#            path: /animals
#            port: 8080
#          initialDelaySeconds: 5
#          periodSeconds: 5
#        readinessProbe:
#          httpGet:
#            path: /animals
#            port: 8080
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
        - name: props-vol
          configMap:
            name: {{ .Release.Name }}
        {{- if .Values.service.ssl }}
        - name: cert-vol
          secret:
            secretName: hathor-api-tls
        {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}
            topologyKey: "kubernetes.io/hostname"
